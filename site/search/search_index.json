{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Background"},{"location":"ODH-COVID19/cecret/","text":"Running CECRET workflow \u00b6 Ensure initialization has been complete Change working directory to the analysis pipeline directory Select the run flag (-r run) on the project (-n name_of_project). (OPTIONAL) select whether a QC report (-q) should be generated (default \"Y\") # 1. move to working dir cd analysis_pipeline # 2A. run with QC report bash run_analysis_pipeline.sh -m cecret -n name_of_project -q Y # 2B. run without QC report bash run_analysis_pipeline.sh -m cecret -n name_of_project -q N","title":"2. CECRET"},{"location":"ODH-COVID19/cecret/#running-cecret-workflow","text":"Ensure initialization has been complete Change working directory to the analysis pipeline directory Select the run flag (-r run) on the project (-n name_of_project). (OPTIONAL) select whether a QC report (-q) should be generated (default \"Y\") # 1. move to working dir cd analysis_pipeline # 2A. run with QC report bash run_analysis_pipeline.sh -m cecret -n name_of_project -q Y # 2B. run without QC report bash run_analysis_pipeline.sh -m cecret -n name_of_project -q N","title":"Running CECRET workflow"},{"location":"ODH-COVID19/citation/","text":"citation here","title":"Citation"},{"location":"ODH-COVID19/getting-started/","text":"Initialization \u00b6 Deployment of run features (CECRET, GISAID, NCBI) requires the initalization of the pipeline. This step will create the directory structure needed for the pipeline, will create log files for documentation and will copy the necessary manifests and config files to their appropriate locations for pipeline control. Change working directory to the analysis pipeline directory Select the initialization flag (-r init) on the project (-n name_of_project) cd analysis_pipeline bash run_analysis_pipeline.sh -m init -n name_of_project Initialization output: -- /name_of_project/ ---- /analysis/ ------ /fasta/ -------- /not_uploaded/ -------- /uploaded/ -------- /partial_upload/ -------- /failed/ ------ /intermed/ ---- /cecret/ ---- /fastq/ ---- /logs/ ------ config_cecret.config ------ config_multiqc.yaml ------ config_pipeline.yaml ------ gisaid_log.txt ------ pipeline_log.txt ------ /qc/ -------- covid19_qcreport ------ /tmp/ -------- fastqc -------- unzipped Configuration Files \u00b6 After completion of the initialization step, configuration files may be edited according to the project. These include: 1. PIPELINE Config \u00b6 Description: This configuration file controls all metadata associated with the project, as well as pipeline specific parameters. Within this configuration file software versions can be selected and batch size can be controlled. GISAID-related parameters (optional and required) are also included in this configuration file. Location: /name_of_project/logs/config_pipeline.yaml 2. CECRET Config \u00b6 Description: This configuration file controls all the features associated with the CECRET workflow. Location: /name_of_project/logs/config_cecret.config 3. MULTIQC Config \u00b6 Description: This configuration file controls all the features associated with the MULTIQC report generated upon pipeline completion. Location: /name_of_project/logs/config_multiqc.yaml Configuration Files \u00b6 Required: Submitter: enter your GISAID-Username Type: default must remain betacoronavirus Passage details/history: Original, Vero Host: Human, Environment, Canine, Manis javanica, Rhinolophus affinis, etc Gender: set to unkonwn for all Patient status: Hospitalized, Released, Live, Deceased, or unknown Outbreak: Date, Location, type of gathering (Family cluster, etc.) Last vaccinated: provide details if applicable Treatment: Include drug name, dosage Sequencing technology: Illumina Miseq, Sanger, Nanopore MinION, Ion Torrent, etc. Originating lab: Where sequence data have been generated Address: Address of originating lab Submitting lab: Where sequence data is being submitted to GISAID Address: Address of submitting lab Authors: a comma separated list of Authors with complete First followed by Last Name Optional: Additional location information: Cruise Ship, Convention, Live animal market Additional host information: Patient infected while traveling in \u2026. Sampling Strategy: Sentinel surveillance (ILI), Sentinel surveillance (ARI), Sentinel surveillance (SARI), Non-sentinel-surveillance (hospital), Non-sentinel-surveillance (GP network), Longitudinal sampling on same patient(s), S gene dropout Specimen source: Sputum, Alveolar lavage fluid, Oro-pharyngeal swab, Blood, Tracheal swab, Urine, Stool, Cloakal swab, Organ, Feces, Other Assembly method: CLC Genomics Workbench 12, Geneious 10.2.4, SPAdes/MEGAHIT v1.2.9, UGENE v. 33, etc. Coverage: 70x, 1,000x, 10,000x (average) Software \u00b6 GISAID specific features \u00b6 GISAID CLI requires authentication. Authentication must be performed every 100 days. To run tests, use client_id: --client_id: TEST-EA76875B00C3 For sample uploads, use client_id obtained by emailing: --email: clisupport@gisaid.org User specific ID list --cliend_id: cid-1e895d886d3a6 # Example test authentication cli2 authenticate --client_id TEST-EA76875B00C3 --username sevillas2 # Example full authentication cli2 authenticate --cliend_id [insert id] --username [username]","title":"1. Getting Started"},{"location":"ODH-COVID19/getting-started/#initialization","text":"Deployment of run features (CECRET, GISAID, NCBI) requires the initalization of the pipeline. This step will create the directory structure needed for the pipeline, will create log files for documentation and will copy the necessary manifests and config files to their appropriate locations for pipeline control. Change working directory to the analysis pipeline directory Select the initialization flag (-r init) on the project (-n name_of_project) cd analysis_pipeline bash run_analysis_pipeline.sh -m init -n name_of_project Initialization output: -- /name_of_project/ ---- /analysis/ ------ /fasta/ -------- /not_uploaded/ -------- /uploaded/ -------- /partial_upload/ -------- /failed/ ------ /intermed/ ---- /cecret/ ---- /fastq/ ---- /logs/ ------ config_cecret.config ------ config_multiqc.yaml ------ config_pipeline.yaml ------ gisaid_log.txt ------ pipeline_log.txt ------ /qc/ -------- covid19_qcreport ------ /tmp/ -------- fastqc -------- unzipped","title":"Initialization"},{"location":"ODH-COVID19/getting-started/#configuration-files","text":"After completion of the initialization step, configuration files may be edited according to the project. These include:","title":"Configuration Files"},{"location":"ODH-COVID19/getting-started/#1-pipeline-config","text":"Description: This configuration file controls all metadata associated with the project, as well as pipeline specific parameters. Within this configuration file software versions can be selected and batch size can be controlled. GISAID-related parameters (optional and required) are also included in this configuration file. Location: /name_of_project/logs/config_pipeline.yaml","title":"1. PIPELINE Config"},{"location":"ODH-COVID19/getting-started/#2-cecret-config","text":"Description: This configuration file controls all the features associated with the CECRET workflow. Location: /name_of_project/logs/config_cecret.config","title":"2. CECRET Config"},{"location":"ODH-COVID19/getting-started/#3-multiqc-config","text":"Description: This configuration file controls all the features associated with the MULTIQC report generated upon pipeline completion. Location: /name_of_project/logs/config_multiqc.yaml","title":"3. MULTIQC Config"},{"location":"ODH-COVID19/getting-started/#configuration-files_1","text":"Required: Submitter: enter your GISAID-Username Type: default must remain betacoronavirus Passage details/history: Original, Vero Host: Human, Environment, Canine, Manis javanica, Rhinolophus affinis, etc Gender: set to unkonwn for all Patient status: Hospitalized, Released, Live, Deceased, or unknown Outbreak: Date, Location, type of gathering (Family cluster, etc.) Last vaccinated: provide details if applicable Treatment: Include drug name, dosage Sequencing technology: Illumina Miseq, Sanger, Nanopore MinION, Ion Torrent, etc. Originating lab: Where sequence data have been generated Address: Address of originating lab Submitting lab: Where sequence data is being submitted to GISAID Address: Address of submitting lab Authors: a comma separated list of Authors with complete First followed by Last Name Optional: Additional location information: Cruise Ship, Convention, Live animal market Additional host information: Patient infected while traveling in \u2026. Sampling Strategy: Sentinel surveillance (ILI), Sentinel surveillance (ARI), Sentinel surveillance (SARI), Non-sentinel-surveillance (hospital), Non-sentinel-surveillance (GP network), Longitudinal sampling on same patient(s), S gene dropout Specimen source: Sputum, Alveolar lavage fluid, Oro-pharyngeal swab, Blood, Tracheal swab, Urine, Stool, Cloakal swab, Organ, Feces, Other Assembly method: CLC Genomics Workbench 12, Geneious 10.2.4, SPAdes/MEGAHIT v1.2.9, UGENE v. 33, etc. Coverage: 70x, 1,000x, 10,000x (average)","title":"Configuration Files"},{"location":"ODH-COVID19/getting-started/#software","text":"","title":"Software"},{"location":"ODH-COVID19/getting-started/#gisaid-specific-features","text":"GISAID CLI requires authentication. Authentication must be performed every 100 days. To run tests, use client_id: --client_id: TEST-EA76875B00C3 For sample uploads, use client_id obtained by emailing: --email: clisupport@gisaid.org User specific ID list --cliend_id: cid-1e895d886d3a6 # Example test authentication cli2 authenticate --client_id TEST-EA76875B00C3 --username sevillas2 # Example full authentication cli2 authenticate --cliend_id [insert id] --username [username]","title":"GISAID specific features"},{"location":"ODH-COVID19/gisaid/","text":"Running GISAID workflow (OPTIONAL) \u00b6 TODO: write up description when implementation is complete cd analysis_pipeline bash run_analysis_pipeline.sh -m gisaid -n name_of_project","title":"3. GISAID"},{"location":"ODH-COVID19/gisaid/#running-gisaid-workflow-optional","text":"TODO: write up description when implementation is complete cd analysis_pipeline bash run_analysis_pipeline.sh -m gisaid -n name_of_project","title":"Running GISAID workflow (OPTIONAL)"},{"location":"ODH-COVID19/maintenance/","text":"Pipeline Maintanence \u00b6 Configuration Files \u00b6 Active Configs. All configuration files should adopt a standard nomenclature: config_typeofconfig.yaml. For example, config_pipeline.yaml for a pipeline config file. Accepted typeofconifg are: pipeline,cecret,multiqc. \u00b6 In-active Configs. Any updated configuration files should follow archiving practices described below. \u00b6 Reference Files \u00b6 Active References. All references files should adopt a standard nomenclature: ref_typeofref_id.yaml. For example, config_pipeline.yaml for a pipeline config file. Accepted typeofconifg are: pipeline,cecret,multiqc. \u00b6 In-active Configs. Any updated configuration files should follow archiving practices described below. \u00b6 Archiving \u00b6 Supporting Files. All configuration and reference files should be kept for documentation purposes. The outdated file should be copied with the naming schema: config_typeofconfig_dateofarchive.ext or reference_referencetype_dateofarchive.ext. Reference file README must be updated to indicate the new source of the reference file in use. All changes must be backed up on GITHUB within one week. Once it is determined that the pipeline is needed to be updated (either configuration files, reference files) changes should be made to the local repository. GITHUB must be updated with these changes and a new version should be tagged. If changes are backwards compatible a minor version change can be implemented. If the change is not backwards compatible, then a major version change should be implemented. \u00b6 Software Updates \u00b6 CECRET \u00b6 The CECRET pipeline can be updated through the analysis workflow. This will update the pipeline and any related script/pipeline/docker changes. This would not constitute an archiving event. cd analysis_pipeline bash run_analysis_pipeline.sh -p update PANGOLIN, NEXTCLADE \u00b6 New versions of PANGOLIN and NEXTCLADE have a significant impact on the results generated from the analysis workflow. While these should be regularly reviewed, updating these will require a change to the config and to the workflow run file (run_analysis_pipeline.sh). Follow the nomenclature, documentation, and archiving strategies described under configuration updates. This would consistitute a minor archiving event. Update configuration file Updates must be made to the configuration file to provide users with the newest version Update analysis run_file Updates must be to the run_analysis_pipeline.sh to conver the user selected feature to the correct software version. TODO: create a file that can be edited rather than needed to edit the run_analysis_pipeline.sh Reference files \u00b6 include information on archiving where source documentation is https://github.com/artic-network/artic-ncov2019/tree/master/primer_schemes/nCoV-2019/V4.1 This would constitute a minor archiving event. Primers \u00b6 TODO update which primers are used. This would consistitute a minor archiving event.","title":"5. MAINTENANCE"},{"location":"ODH-COVID19/maintenance/#pipeline-maintanence","text":"","title":"Pipeline Maintanence"},{"location":"ODH-COVID19/maintenance/#configuration-files","text":"","title":"Configuration Files"},{"location":"ODH-COVID19/maintenance/#active-configs-all-configuration-files-should-adopt-a-standard-nomenclature-config_typeofconfigyaml-for-example-config_pipelineyaml-for-a-pipeline-config-file-accepted-typeofconifg-are-pipelinececretmultiqc","text":"","title":"Active Configs. All configuration files should adopt a standard nomenclature: config_typeofconfig.yaml. For example, config_pipeline.yaml for a pipeline config file. Accepted typeofconifg are: pipeline,cecret,multiqc."},{"location":"ODH-COVID19/maintenance/#in-active-configs-any-updated-configuration-files-should-follow-archiving-practices-described-below","text":"","title":"In-active Configs. Any updated configuration files should follow archiving practices described below."},{"location":"ODH-COVID19/maintenance/#reference-files","text":"","title":"Reference Files"},{"location":"ODH-COVID19/maintenance/#active-references-all-references-files-should-adopt-a-standard-nomenclature-ref_typeofref_idyaml-for-example-config_pipelineyaml-for-a-pipeline-config-file-accepted-typeofconifg-are-pipelinececretmultiqc","text":"","title":"Active References. All references files should adopt a standard nomenclature: ref_typeofref_id.yaml. For example, config_pipeline.yaml for a pipeline config file. Accepted typeofconifg are: pipeline,cecret,multiqc."},{"location":"ODH-COVID19/maintenance/#in-active-configs-any-updated-configuration-files-should-follow-archiving-practices-described-below_1","text":"","title":"In-active Configs. Any updated configuration files should follow archiving practices described below."},{"location":"ODH-COVID19/maintenance/#archiving","text":"Supporting Files. All configuration and reference files should be kept for documentation purposes. The outdated file should be copied with the naming schema: config_typeofconfig_dateofarchive.ext or reference_referencetype_dateofarchive.ext. Reference file README must be updated to indicate the new source of the reference file in use. All changes must be backed up on GITHUB within one week.","title":"Archiving"},{"location":"ODH-COVID19/maintenance/#once-it-is-determined-that-the-pipeline-is-needed-to-be-updated-either-configuration-files-reference-files-changes-should-be-made-to-the-local-repository-github-must-be-updated-with-these-changes-and-a-new-version-should-be-tagged-if-changes-are-backwards-compatible-a-minor-version-change-can-be-implemented-if-the-change-is-not-backwards-compatible-then-a-major-version-change-should-be-implemented","text":"","title":"Once it is determined that the pipeline is needed to be updated (either configuration files, reference files) changes should be made to the local repository. GITHUB must be updated with these changes and a new version should be tagged. If changes are backwards compatible a minor version change can be implemented. If the change is not backwards compatible, then a major version change should be implemented."},{"location":"ODH-COVID19/maintenance/#software-updates","text":"","title":"Software Updates"},{"location":"ODH-COVID19/maintenance/#cecret","text":"The CECRET pipeline can be updated through the analysis workflow. This will update the pipeline and any related script/pipeline/docker changes. This would not constitute an archiving event. cd analysis_pipeline bash run_analysis_pipeline.sh -p update","title":"CECRET"},{"location":"ODH-COVID19/maintenance/#pangolin-nextclade","text":"New versions of PANGOLIN and NEXTCLADE have a significant impact on the results generated from the analysis workflow. While these should be regularly reviewed, updating these will require a change to the config and to the workflow run file (run_analysis_pipeline.sh). Follow the nomenclature, documentation, and archiving strategies described under configuration updates. This would consistitute a minor archiving event. Update configuration file Updates must be made to the configuration file to provide users with the newest version Update analysis run_file Updates must be to the run_analysis_pipeline.sh to conver the user selected feature to the correct software version. TODO: create a file that can be edited rather than needed to edit the run_analysis_pipeline.sh","title":"PANGOLIN, NEXTCLADE"},{"location":"ODH-COVID19/maintenance/#reference-files_1","text":"include information on archiving where source documentation is https://github.com/artic-network/artic-ncov2019/tree/master/primer_schemes/nCoV-2019/V4.1 This would constitute a minor archiving event.","title":"Reference files"},{"location":"ODH-COVID19/maintenance/#primers","text":"TODO update which primers are used. This would consistitute a minor archiving event.","title":"Primers"},{"location":"ODH-COVID19/ncbi/","text":"Running NCBI workflow (OPTIONAL) \u00b6 TODO: write up description when implementation is complete cd analysis_pipeline bash run_analysis_pipeline.sh -m ncbi -n name_of_project","title":"4. NCBI"},{"location":"ODH-COVID19/ncbi/#running-ncbi-workflow-optional","text":"TODO: write up description when implementation is complete cd analysis_pipeline bash run_analysis_pipeline.sh -m ncbi -n name_of_project","title":"Running NCBI workflow (OPTIONAL)"},{"location":"ODH-COVID19/troubleshooting/","text":"","title":"Troubleshooting"},{"location":"ODH-COVID19/tutorial/","text":"Tutorial \u00b6 Testing parameters have been created in order to test the settings of the pipeline with new data, or train new staff on it's usage. Test settings will download a complete project, but will only run two batches, with two samples in each batch. Initialization, run, and QC parameters should be reviewed below as they may be used in conjunction with the test setting. Change working directory to the analysis pipeline directory Run test on project name_of_project with the testing (-t) flag turned on (Y).(OPTIONAL) select whether a QC report (-q) should be generated (default \"Y\") # 1. move to working dir cd analysis_pipeline # 2. run with testing flag on, without QC report bash run_analysis_pipeline.sh -m test -n name_of_project -t Y -q N","title":"Tutorial"},{"location":"ODH-COVID19/tutorial/#tutorial","text":"Testing parameters have been created in order to test the settings of the pipeline with new data, or train new staff on it's usage. Test settings will download a complete project, but will only run two batches, with two samples in each batch. Initialization, run, and QC parameters should be reviewed below as they may be used in conjunction with the test setting. Change working directory to the analysis pipeline directory Run test on project name_of_project with the testing (-t) flag turned on (Y).(OPTIONAL) select whether a QC report (-q) should be generated (default \"Y\") # 1. move to working dir cd analysis_pipeline # 2. run with testing flag on, without QC report bash run_analysis_pipeline.sh -m test -n name_of_project -t Y -q N","title":"Tutorial"}]}