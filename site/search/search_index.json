{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Background","text":"<p>The ODHL SARS-COV2 pipeline should be deployed, as follows:</p>"},{"location":"#usage","title":"Usage","text":"<p>The pipeline workflow is as follows: - Initialize - SARSCOV2 Analysis - GISAID Upload - NCBI Upload Preparation</p>"},{"location":"ODH-COVID19/analysis/","title":"2. Analysis","text":""},{"location":"ODH-COVID19/analysis/#running-analysis-workflow","title":"Running Analysis workflow","text":"<ol> <li>Initialization has been complete (see Getting Started for details)</li> <li>Change working directory to the analysis pipeline directory</li> <li>Run analysis workflow<ul> <li>There are several subworkflows that are available to the user. These include: <ul> <li><code>DOWNLOAD</code>: Downloads analysis files for processing directly from <code>BASESPACE</code></li> <li><code>BATCH</code>: Creates sample batches dependent on project size and input from config_pipeline.yaml</li> <li><code>ANALYZE</code>: Processes batches individually, including:<ul> <li>Downloads raw data (FASTA) and quality control files from <code>BASESPACE</code></li> <li>Submits batch to <code>staphb-wf cecret</code> workflow</li> <li>Transforms results into batch level analysis and quality control reports</li> </ul> </li> <li><code>REPORT</code>: Merges batch outputs into final analysis and quality control reports</li> <li><code>CLEAN</code>: Removes intermediate files, and working directories</li> <li><code>ALL</code>: Runs all of the above steps, sequentially</li> </ul> </li> </ul> </li> </ol> <pre><code>#1 change to the working directory\ncd SARS_CoV_2_Workflow\n\n#2A run workflow command: sarscov2\nbash run_analysis_pipeline.sh -p sarscov2 -n name_of_project\n\n#2B run workflow command: sarscov2; subworkflow DOWNLOAD\nbash run_analysis_pipeline.sh -p sarscov2 -n name_of_project -s DOWNLOAD\n</code></pre>"},{"location":"ODH-COVID19/citation/","title":"Citation","text":"<ul> <li>Nextflow</li> <li>Singularity or Docker - set the profile as singularity or docker during runtime</li> <li>Cecret</li> </ul>"},{"location":"ODH-COVID19/dependencies/","title":"Dependencies","text":""},{"location":"ODH-COVID19/dependencies/#nextflow-required","title":"Nextflow [Required]","text":"<ul> <li>Nextflow</li> </ul>"},{"location":"ODH-COVID19/dependencies/#singularity-or-docker-sarscov2-only","title":"Singularity OR Docker [sarscov2 ONLY]","text":"<p>Either can be deployed within the <code>nextflow.config</code> file by setting the profile as singularity or docker during runtime - Singularity or Docker </p>"},{"location":"ODH-COVID19/dependencies/#basespace-sarscov2-only","title":"Basespace [sarscov2 ONLY]","text":"<p>To access the sequencing files, the <code>basespace cli</code> must be installed. -Basespace</p>"},{"location":"ODH-COVID19/dependencies/#gisaid-gisaid-only","title":"GISAID [gisaid ONLY]","text":"<p>To upload to GISAID, the <code>gisaid cli</code> must be installed. Prior to use the GISAID CLI requires authentication. Authentication must be performed every 100 days. </p> <pre><code># Example test authentication\ncli2 authenticate --client_id TEST-EA76875B00C3 --username sevillas2\n\n# Example full authentication\ncli2 authenticate --cliend_id [insert id] --username [username]\n</code></pre>"},{"location":"ODH-COVID19/dependencies/#python","title":"Python","text":"<p>Python3 is required to run quality control report scripts.</p>"},{"location":"ODH-COVID19/dependencies/#r","title":"R","text":"<p>R version 4.3 is require to run analytical report scripts.</p>"},{"location":"ODH-COVID19/getting-started/","title":"1. Getting Started","text":""},{"location":"ODH-COVID19/getting-started/#initialization","title":"Initialization","text":"<p>Deployment of the analysis workflow (<code>-p sarscov2</code>) requires the initalization of the pipeline. This step will create the directory structure needed for the pipeline, will create log files for documentation and will copy the necessary manifests and config files to their appropriate locations for pipeline control.</p> <ol> <li>Change working directory to the analysis pipeline directory</li> <li>Run initialization</li> </ol> <pre><code>#1 change to the working directory\ncd SARS_CoV_2_Workflow\n\n#2 run workflow command: initialize\nbash run_analysis_pipeline.sh -p init -n name_of_project\n</code></pre>"},{"location":"ODH-COVID19/getting-started/#configuration-files","title":"Configuration Files","text":"<p>After completion of the initialization step, configuration files may be edited according to the project. These include:</p>"},{"location":"ODH-COVID19/getting-started/#1-pipeline-config","title":"1. PIPELINE Config","text":"<ul> <li>Description: This configuration file controls all metadata associated with the project, as well as pipeline specific parameters. Within this configuration file software versions can be selected and batch size can be controlled. GISAID-related parameters (optional and required) are also included in this configuration file.</li> <li>Location: /name_of_project/logs/config/config_pipeline.yaml</li> </ul>"},{"location":"ODH-COVID19/getting-started/#2-cecret-config","title":"2. CECRET Config","text":"<ul> <li>Description: This configuration file controls all the features associated with the CECRET workflow.</li> <li>Location: /name_of_project/logs/config/config_cecret.config</li> </ul>"},{"location":"ODH-COVID19/getting-started/#3-multiqc-config","title":"3. MULTIQC Config","text":"<ul> <li>Description: This configuration file controls all the features associated with the MULTIQC report generated upon pipeline completion.</li> <li>Location: /name_of_project/logs/config/config_multiqc.yaml</li> </ul>"},{"location":"ODH-COVID19/getting-started/#configuration-files_1","title":"Configuration Files","text":"<ul> <li> <p>Required:</p> </li> <li> <p>Submitter: enter your GISAID-Username</p> </li> <li>Type: default must remain betacoronavirus</li> <li>Passage details/history: Original, Vero</li> <li>Host: Human, Environment, Canine, Manis javanica, Rhinolophus affinis, etc </li> <li>Gender: set to unkonwn for all</li> <li>Patient status: Hospitalized, Released, Live, Deceased, or unknown</li> <li>Outbreak: Date, Location, type of gathering (Family cluster, etc.)</li> <li>Last vaccinated: provide details if applicable</li> <li>Treatment: Include drug name, dosage</li> <li>Sequencing technology: Illumina Miseq, Sanger, Nanopore MinION, Ion Torrent, etc.</li> <li>Originating lab: Where sequence data have been generated</li> <li>Address: Address of originating lab</li> <li>Submitting lab: Where sequence data is being submitted to GISAID</li> <li>Address: Address of submitting lab</li> <li> <p>Authors: a comma separated list of Authors with complete First followed by Last Name</p> </li> <li> <p>Optional:</p> </li> <li> <p>Additional location information: Cruise Ship, Convention, Live animal market</p> </li> <li>Additional host information: Patient infected while traveling in \u2026. </li> <li>Sampling Strategy: Sentinel surveillance (ILI), Sentinel surveillance (ARI), Sentinel surveillance (SARI), Non-sentinel-surveillance (hospital), Non-sentinel-surveillance (GP network), Longitudinal sampling on same patient(s), S gene dropout</li> <li>Specimen source: Sputum, Alveolar lavage fluid, Oro-pharyngeal swab, Blood, Tracheal swab, Urine, Stool, Cloakal swab, Organ, Feces, Other</li> <li>Assembly method: CLC Genomics Workbench 12, Geneious 10.2.4, SPAdes/MEGAHIT v1.2.9, UGENE v. 33, etc.</li> <li>Coverage: 70x, 1,000x, 10,000x (average)</li> </ul>"},{"location":"ODH-COVID19/gisaid/","title":"3. GISAID","text":""},{"location":"ODH-COVID19/gisaid/#running-gisaid-workflow","title":"Running GISAID workflow","text":"<ol> <li><code>sarscov2</code> workflow has been completed (see Analysis for more details)</li> <li>Change working directory to the analysis pipeline directory</li> <li> <p>Run analysis workflow</p> <ul> <li> <p>There are several subworkflows that are available to the user. These include: </p> <ul> <li> <p><code>PREP</code>: </p> <ul> <li>Perform QC for samples that fail N threshold, files added to failed list </li> <li>Perform QC for samples missing metadata files, files added to failed list</li> <li>Transforms passing samples metadata into GISAID required template</li> <li>Transforms passing samples FASTA files into GISAID required FASTA</li> </ul> </li> <li> <p><code>UPLOAD</code>: </p> <ul> <li>Uploaded metadata and FASTA files to GISAID</li> </ul> </li> <li> <p><code>QC</code>: </p> <ul> <li>Merge GISAID ID's into final output report</li> <li>Moves FASTA files to appropriate final directories (IE gisaid_complete) </li> </ul> </li> <li> <p><code>ALL</code>: Runs all of the above steps, sequentially</p> </li> </ul> </li> </ul> </li> </ol> <pre><code>#1 change to the working directory\ncd SARS_CoV_2_Workflow\n\n#2A run workflow command: gisaid\nbash run_analysis_pipeline.sh -p gisaid -n name_of_project\n\n#2B run workflow command: sarscov2; subworkflow PREP\nbash run_analysis_pipeline.sh -p gisaid -n name_of_project -s prep\n</code></pre>"},{"location":"ODH-COVID19/maintenance/","title":"5. Maintenance","text":""},{"location":"ODH-COVID19/maintenance/#pipeline-maintanence","title":"Pipeline Maintanence","text":""},{"location":"ODH-COVID19/maintenance/#configuration-files","title":"Configuration Files","text":""},{"location":"ODH-COVID19/maintenance/#active-configs-all-configuration-files-should-adopt-a-standard-nomenclature-config_typeofconfigyaml-for-example-config_pipelineyaml-for-a-pipeline-config-file-accepted-typeofconifg-are-pipelinececretmultiqc","title":"Active Configs. All configuration files should adopt a standard nomenclature: config_typeofconfig.yaml. For example, config_pipeline.yaml for a pipeline config file. Accepted typeofconifg are: pipeline,cecret,multiqc.","text":""},{"location":"ODH-COVID19/maintenance/#in-active-configs-any-updated-configuration-files-should-follow-archiving-practices-described-below","title":"In-active Configs. Any updated configuration files should follow archiving practices described below.","text":""},{"location":"ODH-COVID19/maintenance/#reference-files","title":"Reference Files","text":""},{"location":"ODH-COVID19/maintenance/#active-references-all-references-files-should-adopt-a-standard-nomenclature-ref_typeofref_idyaml-for-example-config_pipelineyaml-for-a-pipeline-config-file-accepted-typeofconifg-are-pipelinececretmultiqc","title":"Active References. All references files should adopt a standard nomenclature: ref_typeofref_id.yaml. For example, config_pipeline.yaml for a pipeline config file. Accepted typeofconifg are: pipeline,cecret,multiqc.","text":""},{"location":"ODH-COVID19/maintenance/#in-active-configs-any-updated-configuration-files-should-follow-archiving-practices-described-below_1","title":"In-active Configs. Any updated configuration files should follow archiving practices described below.","text":""},{"location":"ODH-COVID19/maintenance/#archiving","title":"Archiving","text":"<p>Supporting Files. All configuration and reference files should be kept for documentation purposes. The outdated file should be copied with the naming schema: config_typeofconfig_dateofarchive.ext or reference_referencetype_dateofarchive.ext. Reference file README must be updated to indicate the new source of the reference file in use. All changes must be backed up on GITHUB within one week.</p>"},{"location":"ODH-COVID19/maintenance/#once-it-is-determined-that-the-pipeline-is-needed-to-be-updated-either-configuration-files-reference-files-changes-should-be-made-to-the-local-repository-github-must-be-updated-with-these-changes-and-a-new-version-should-be-tagged-if-changes-are-backwards-compatible-a-minor-version-change-can-be-implemented-if-the-change-is-not-backwards-compatible-then-a-major-version-change-should-be-implemented","title":"Once it is determined that the pipeline is needed to be updated (either configuration files, reference files) changes should be made to the local repository. GITHUB must be updated with these changes and a new version should be tagged. If changes are backwards compatible a minor version change can be implemented. If the change is not backwards compatible, then a major version change should be implemented.","text":""},{"location":"ODH-COVID19/maintenance/#software-updates","title":"Software Updates","text":""},{"location":"ODH-COVID19/maintenance/#cecret","title":"CECRET","text":"<p>The CECRET pipeline can be updated through the analysis workflow. This will update the pipeline and any related script/pipeline/docker changes. This would not constitute an archiving event.</p> <pre><code>cd analysis_pipeline\n\nbash run_analysis_pipeline.sh -p update\n</code></pre>"},{"location":"ODH-COVID19/maintenance/#pangolin-nextclade","title":"PANGOLIN, NEXTCLADE","text":"<p>New versions of PANGOLIN and NEXTCLADE have a significant impact on the results generated from the analysis workflow. While these should be regularly reviewed, updating these will require a change to the config and to the workflow run file (run_analysis_pipeline.sh). Follow the nomenclature, documentation, and archiving strategies described under configuration updates. This would consistitute a minor archiving event.</p> <ol> <li>Update configuration file<ul> <li>Updates must be made to the configuration file to provide users with the newest version</li> </ul> </li> <li>Update analysis run_file<ul> <li>Updates must be to the run_analysis_pipeline.sh to conver the user selected feature to the correct software version. TODO: create a file that can be edited rather than needed to edit the run_analysis_pipeline.sh</li> </ul> </li> </ol>"},{"location":"ODH-COVID19/maintenance/#reference-files_1","title":"Reference files","text":"<ul> <li>include information on archiving</li> <li>where source documentation is https://github.com/artic-network/artic-ncov2019/tree/master/primer_schemes/nCoV-2019/V4.1 This would constitute a minor archiving event.</li> </ul>"},{"location":"ODH-COVID19/maintenance/#primers","title":"Primers","text":"<p>TODO update which primers are used. This would consistitute a minor archiving event.</p>"},{"location":"ODH-COVID19/ncbi/","title":"4. NCBI","text":""},{"location":"ODH-COVID19/ncbi/#running-ncbi-workflow-optional","title":"Running NCBI workflow (OPTIONAL)","text":"<p>TODO: write up description when implementation is complete</p> <pre><code>cd analysis_pipeline\n\nbash run_analysis_pipeline.sh -m ncbi -n name_of_project\n</code></pre>"},{"location":"ODH-COVID19/tutorial/","title":"Tutorial","text":""},{"location":"ODH-COVID19/tutorial/#tutorial","title":"Tutorial","text":"<p>Testing parameters have been created in order to test the settings of the pipeline with new data, or train new staff on it's usage. Test settings will download a complete project, but will only run two batches, with two samples in each batch. Initialization, run, and QC parameters should be reviewed below as they may be used in conjunction with the test setting.</p> <ol> <li>Change working directory to the analysis pipeline directory</li> <li>Run analysis workflow</li> </ol> <pre><code># 1. move to working dir\ncd SARS_CoV_2_Workflow\n\n# 2. run test\nbash run_analysis_pipeline.sh -p sarscov2 -n name_of_project -s ALL -t Y\n</code></pre>"},{"location":"ODH-COVID19/tutorial/#gisaid-cli-tutorial","title":"GISAID CLI Tutorial","text":"<p>To ensure GISAID is properly installed and authenticated, the following steps can be performed. <pre><code>To run tests, use client_id:\n--client_id: TEST-EA76875B00C3\n\nFor sample uploads, use client_id obtained by emailing:\n--email: clisupport@gisaid.org\n\nUser specific ID list\n--cliend_id: cid-1e895d886d3a6\n</code></pre></p>"}]}